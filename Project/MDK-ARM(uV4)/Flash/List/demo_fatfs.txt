; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\demo_fatfs.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\demo_fatfs.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\FatFS\src -I..\..\User\usbh_mass_storage -ID:\Software\keil\ARM\RV31\INC -ID:\Software\keil\ARM\CMSIS\Include -ID:\Software\keil\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=518 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\demo_fatfs.crf ..\..\User\demo_fatfs.c]
                          THUMB

                          AREA ||i.CreateNewFile||, CODE, READONLY, ALIGN=2

                  CreateNewFile PROC
;;;56     
;;;57     void CreateNewFile(void)
000000  b500              PUSH     {lr}
;;;58     {
000002  f2ad4d84          SUB      sp,sp,#0x484
;;;59     	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;60     //	FRESULT result;
;;;61     	FATFS fs;
;;;62     	FIL file;
;;;63     	DIR DirInf;
;;;64     	uint32_t bw;
;;;65     	
;;;66     	
;;;67     	f_mount(FS_USB, &fs);
000006  a994              ADD      r1,sp,#0x250
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       f_mount
;;;68     	f_opendir(&DirInf, "/");
00000e  a112              ADR      r1,|L1.88|
000010  a801              ADD      r0,sp,#4
000012  f7fffffe          BL       f_opendir
;;;69     	f_open(&file, "armfly.txt", FA_CREATE_ALWAYS | FA_WRITE);
000016  220a              MOVS     r2,#0xa
000018  a110              ADR      r1,|L1.92|
00001a  a80a              ADD      r0,sp,#0x28
00001c  f7fffffe          BL       f_open
;;;70     	f_write(&file, "FatFS Write Demo \r\n www.armfly.com \r\n", 34, &bw);
000020  466b              MOV      r3,sp
000022  2222              MOVS     r2,#0x22
000024  a110              ADR      r1,|L1.104|
000026  a80a              ADD      r0,sp,#0x28
000028  f7fffffe          BL       f_write
;;;71     	f_write(&file, "FatFS Write Demo \r\n www.armfly.com \r\n", 34, &bw);
00002c  466b              MOV      r3,sp
00002e  2222              MOVS     r2,#0x22
000030  a10d              ADR      r1,|L1.104|
000032  a80a              ADD      r0,sp,#0x28
000034  f7fffffe          BL       f_write
;;;72     	f_write(&file, "FatFS Write Demo \r\n www.armfly.com \r\n", 34, &bw);
000038  466b              MOV      r3,sp
00003a  2222              MOVS     r2,#0x22
00003c  a10a              ADR      r1,|L1.104|
00003e  a80a              ADD      r0,sp,#0x28
000040  f7fffffe          BL       f_write
;;;73     	f_close(&file);
000044  a80a              ADD      r0,sp,#0x28
000046  f7fffffe          BL       f_close
;;;74     	f_mount(FS_USB, NULL);
00004a  2100              MOVS     r1,#0
00004c  4608              MOV      r0,r1
00004e  f7fffffe          BL       f_mount
;;;75     	
;;;76     	
;;;77     
;;;78     // 	/* 挂载文件系统 */
;;;79     //	result = f_mount(FS_USB, &fs);			/* Mount a logical drive */
;;;80     ////	if (result != FR_OK)
;;;81     ////	{
;;;82     ////		printf("挂载文件系统失败 (%d)\r\n", result);
;;;83     ////	}
;;;84     
;;;85     //	/* 打开根文件夹 */
;;;86     //	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
;;;87     ////	if (result != FR_OK)
;;;88     ////	{
;;;89     ////		printf("打开根目录失败 (%d)\r\n", result);
;;;90     ////		return;
;;;91     ////	}
;;;92     
;;;93     //	/* 打开文件 */
;;;94     //	result = f_open(&file, "armfly.txt", FA_CREATE_ALWAYS | FA_WRITE);
;;;95     
;;;96     //	/* 写一串数据 */
;;;97     //	result = f_write(&file, "FatFS Write Demo \r\n www.armfly.com \r\n", 34, &bw);
;;;98     ////	if (result == FR_OK)
;;;99     ////	{
;;;100    ////		printf("armfly.txt 文件写入成功\r\n");
;;;101    ////	}
;;;102    ////	else
;;;103    ////	{
;;;104    ////		printf("armfly.txt 文件写入失败\r\n");
;;;105    ////	}
;;;106    
;;;107    //	/* 关闭文件*/
;;;108    //	f_close(&file);
;;;109    
;;;110    //	/* 卸载文件系统 */
;;;111    //	f_mount(FS_USB, NULL);
;;;112    }
000052  f20d4d84          ADD      sp,sp,#0x484
000056  bd00              POP      {pc}
;;;113    
                          ENDP

                  |L1.88|
000058  2f00              DCB      "/",0
00005a  00                DCB      0
00005b  00                DCB      0
                  |L1.92|
00005c  61726d66          DCB      "armfly.txt",0
000060  6c792e74
000064  787400  
000067  00                DCB      0
                  |L1.104|
000068  46617446          DCB      "FatFS Write Demo \r\n www.armfly.com \r\n",0
00006c  53205772
000070  69746520
000074  44656d6f
000078  200d0a20
00007c  7777772e
000080  61726d66
000084  6c792e63
000088  6f6d200d
00008c  0a00    
00008e  00                DCB      0
00008f  00                DCB      0

                          AREA ||i.DemoFatFS||, CODE, READONLY, ALIGN=2

                  DemoFatFS PROC
;;;31     */
;;;32     void DemoFatFS(void)
000000  b508              PUSH     {r3,lr}
;;;33     {
;;;34     
;;;35     	  /* Init Host Library */
;;;36     	#ifdef USE_USB_OTG_FS
;;;37     		USBH_Init(&USB_OTG_Core,
;;;38     			USB_OTG_FS_CORE_ID,
;;;39                 &USB_Host,
;;;40                 &USBH_MSC_cb,
;;;41                 &USR_cb);
;;;42     	#else
;;;43     		USBH_Init(&USB_OTG_Core,
000002  4807              LDR      r0,|L2.32|
000004  4b07              LDR      r3,|L2.36|
000006  4a08              LDR      r2,|L2.40|
000008  2100              MOVS     r1,#0
00000a  9000              STR      r0,[sp,#0]
00000c  4807              LDR      r0,|L2.44|
00000e  f7fffffe          BL       USBH_Init
;;;44     			USB_OTG_HS_CORE_ID,
;;;45                 &USB_Host,
;;;46                 &USBH_MSC_cb,
;;;47                 &USR_cb);
;;;48     	#endif
;;;49     
;;;50     	
;;;51     		bsp_Idle();		/* 这个函数在bsp.c文件。用户可以修改这个函数实现CPU休眠和喂狗 */
000012  f7fffffe          BL       bsp_Idle
;;;52     
;;;53     		USBH_Process(&USB_OTG_Core, &USB_Host);
000016  4904              LDR      r1,|L2.40|
000018  4804              LDR      r0,|L2.44|
00001a  f7fffffe          BL       USBH_Process
;;;54     	
;;;55     }
00001e  bd08              POP      {r3,pc}
;;;56     
                          ENDP

                  |L2.32|
                          DCD      USR_cb
                  |L2.36|
                          DCD      USBH_MSC_cb
                  |L2.40|
                          DCD      USB_Host
                  |L2.44|
                          DCD      USB_OTG_Core

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\demo_fatfs.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_demo_fatfs_c_bd2f6d1e____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_demo_fatfs_c_bd2f6d1e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_demo_fatfs_c_bd2f6d1e____REVSH|
#line 144
|__asm___12_demo_fatfs_c_bd2f6d1e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
