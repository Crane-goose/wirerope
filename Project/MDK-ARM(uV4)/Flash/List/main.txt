; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\FatFS\src -I..\..\User\usbh_mass_storage -ID:\Software\keil\ARM\RV31\INC -ID:\Software\keil\ARM\CMSIS\Include -ID:\Software\keil\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=518 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.DewenSet||, CODE, READONLY, ALIGN=2

                  DewenSet PROC
;;;113    
;;;114    void DewenSet(void)
000000  b510              PUSH     {r4,lr}
;;;115    {
;;;116        if(USART_RX_STA&0x8000)
000002  481d              LDR      r0,|L1.120|
000004  8800              LDRH     r0,[r0,#0]  ; USART_RX_STA
000006  f4004000          AND      r0,r0,#0x8000
00000a  2800              CMP      r0,#0
00000c  d033              BEQ      |L1.118|
;;;117        {
;;;118            comSendChar(COM6, 0x5A);
00000e  215a              MOVS     r1,#0x5a
000010  2005              MOVS     r0,#5
000012  f7fffffe          BL       comSendChar
;;;119            if(USART_RX_BUF[5] == 0x20 && USART_RX_BUF[7] == 0x03)//开始采集
000016  4819              LDR      r0,|L1.124|
000018  7940              LDRB     r0,[r0,#5]  ; USART_RX_BUF
00001a  2820              CMP      r0,#0x20
00001c  d11d              BNE      |L1.90|
00001e  4817              LDR      r0,|L1.124|
000020  79c0              LDRB     r0,[r0,#7]  ; USART_RX_BUF
000022  2803              CMP      r0,#3
000024  d119              BNE      |L1.90|
;;;120            {
;;;121                comSendChar(COM6, 0x5A);
000026  215a              MOVS     r1,#0x5a
000028  2005              MOVS     r0,#5
00002a  f7fffffe          BL       comSendChar
;;;122                ucFifoMode = 1;
00002e  2001              MOVS     r0,#1
000030  4913              LDR      r1,|L1.128|
000032  7008              STRB     r0,[r1,#0]
;;;123                bsp_StartAutoTimer(0, 2);	
000034  2102              MOVS     r1,#2
000036  2000              MOVS     r0,#0
000038  f7fffffe          BL       bsp_StartAutoTimer
;;;124                for (int i = 0; i < 6; i++) 
00003c  2000              MOVS     r0,#0
00003e  e007              B        |L1.80|
                  |L1.64|
;;;125                {
;;;126                    add[i] = 0;
000040  2100              MOVS     r1,#0
000042  4a10              LDR      r2,|L1.132|
000044  f8421020          STR      r1,[r2,r0,LSL #2]
;;;127                    ave[i] = 0;
000048  4a0f              LDR      r2,|L1.136|
00004a  f8221010          STRH     r1,[r2,r0,LSL #1]
00004e  1c40              ADDS     r0,r0,#1              ;124
                  |L1.80|
000050  2806              CMP      r0,#6                 ;124
000052  dbf5              BLT      |L1.64|
;;;128                }
;;;129                ave[6] = 0;
000054  2000              MOVS     r0,#0
000056  490c              LDR      r1,|L1.136|
000058  8188              STRH     r0,[r1,#0xc]
                  |L1.90|
;;;130            }
;;;131    
;;;132            if(USART_RX_BUF[5] == 0x10 && USART_RX_BUF[7] == 0x01)//停止采集
00005a  4808              LDR      r0,|L1.124|
00005c  7940              LDRB     r0,[r0,#5]  ; USART_RX_BUF
00005e  2810              CMP      r0,#0x10
000060  d106              BNE      |L1.112|
000062  4806              LDR      r0,|L1.124|
000064  79c0              LDRB     r0,[r0,#7]  ; USART_RX_BUF
000066  2801              CMP      r0,#1
000068  d102              BNE      |L1.112|
;;;133            {															
;;;134                ucFifoMode = 3;
00006a  2003              MOVS     r0,#3
00006c  4904              LDR      r1,|L1.128|
00006e  7008              STRB     r0,[r1,#0]
                  |L1.112|
;;;135            }		
;;;136            USART_RX_STA=0;
000070  2000              MOVS     r0,#0
000072  4901              LDR      r1,|L1.120|
000074  8008              STRH     r0,[r1,#0]
                  |L1.118|
;;;137        }
;;;138    }
000076  bd10              POP      {r4,pc}
;;;139    
                          ENDP

                  |L1.120|
                          DCD      USART_RX_STA
                  |L1.124|
                          DCD      USART_RX_BUF
                  |L1.128|
                          DCD      ucFifoMode
                  |L1.132|
                          DCD      add
                  |L1.136|
                          DCD      ave

                          AREA ||i.HandleDate||, CODE, READONLY, ALIGN=2

                  HandleDate PROC
;;;139    
;;;140    void HandleDate(void)
000000  b510              PUSH     {r4,lr}
;;;141    {
;;;142        //执行停止按钮
;;;143        if (ucFifoMode == 3)	
000002  4897              LDR      r0,|L2.608|
000004  7800              LDRB     r0,[r0,#0]  ; ucFifoMode
000006  2803              CMP      r0,#3
000008  d107              BNE      |L2.26|
;;;144        {
;;;145            bsp_StopTimer(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       bsp_StopTimer
;;;146            AD7606_StopRecord();
000010  f7fffffe          BL       AD7606_StopRecord
;;;147            f_close(&file);
000014  4893              LDR      r0,|L2.612|
000016  f7fffffe          BL       f_close
                  |L2.26|
;;;148        }	
;;;149        //执行运行按钮
;;;150        if (ucFifoMode == 1)/* 计算500个数的均值 */
00001a  4891              LDR      r0,|L2.608|
00001c  7800              LDRB     r0,[r0,#0]  ; ucFifoMode
00001e  2801              CMP      r0,#1
                  |L2.32|
000020  d17e              BNE      |L2.288|
;;;151        {
;;;152            if (bsp_CheckTimer(0))
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       bsp_CheckTimer
000028  b130              CBZ      r0,|L2.56|
;;;153            {
;;;154                /* 每隔xms 进来一次. 由软件启动转换 */
;;;155                AD7606_ReadNowAdc();		/* 读取采样结果 */
00002a  f7fffffe          BL       AD7606_ReadNowAdc
;;;156                AD7606_StartConvst();		/* 启动下次转换 */
00002e  f7fffffe          BL       AD7606_StartConvst
;;;157                ucRefresh = 1;	/* 刷新显示 */
000032  2001              MOVS     r0,#1
000034  498c              LDR      r1,|L2.616|
000036  7008              STRB     r0,[r1,#0]
                  |L2.56|
;;;158            }			
;;;159            if (ucRefresh == 1)
000038  488b              LDR      r0,|L2.616|
00003a  7800              LDRB     r0,[r0,#0]  ; ucRefresh
00003c  2801              CMP      r0,#1
00003e  d1ef              BNE      |L2.32|
;;;160            {	
;;;161                ucRefresh = 0;
000040  2000              MOVS     r0,#0
000042  4989              LDR      r1,|L2.616|
000044  7008              STRB     r0,[r1,#0]
;;;162                reset++;
000046  4889              LDR      r0,|L2.620|
000048  8800              LDRH     r0,[r0,#0]  ; reset
00004a  1c40              ADDS     r0,r0,#1
00004c  4987              LDR      r1,|L2.620|
00004e  8008              STRH     r0,[r1,#0]
;;;163                if(reset>100&&reset<=600)
000050  4608              MOV      r0,r1
000052  8800              LDRH     r0,[r0,#0]  ; reset
000054  2864              CMP      r0,#0x64
000056  dd26              BLE      |L2.166|
000058  4608              MOV      r0,r1
00005a  8800              LDRH     r0,[r0,#0]  ; reset
00005c  f5b07f16          CMP      r0,#0x258
000060  dc21              BGT      |L2.166|
;;;164                {
;;;165                    //计算幅值和编码器距离
;;;166                    for(int i = 0; i < 6; i++)
000062  2000              MOVS     r0,#0
000064  e00e              B        |L2.132|
                  |L2.102|
;;;167                    {
;;;168                        chan[i] = g_tAD7606.sNowAdc[i]*5000/32768;
000066  4a82              LDR      r2,|L2.624|
000068  f8322010          LDRH     r2,[r2,r0,LSL #1]
00006c  f2413388          MOV      r3,#0x1388
000070  fb12f103          SMULBB   r1,r2,r3
000074  17ca              ASRS     r2,r1,#31
000076  eb014252          ADD      r2,r1,r2,LSR #17
00007a  13d2              ASRS     r2,r2,#15
00007c  4b7d              LDR      r3,|L2.628|
00007e  f8232010          STRH     r2,[r3,r0,LSL #1]
000082  1c40              ADDS     r0,r0,#1              ;166
                  |L2.132|
000084  2806              CMP      r0,#6                 ;166
000086  dbee              BLT      |L2.102|
;;;169                    }
;;;170                    
;;;171                    for (int i = 0; i < 6; i++) 
000088  2000              MOVS     r0,#0
00008a  e00a              B        |L2.162|
                  |L2.140|
;;;172                    {
;;;173                        add[i] += chan[i];
00008c  497a              LDR      r1,|L2.632|
00008e  f8511020          LDR      r1,[r1,r0,LSL #2]
000092  4a78              LDR      r2,|L2.628|
000094  f9322010          LDRSH    r2,[r2,r0,LSL #1]
000098  4411              ADD      r1,r1,r2
00009a  4a77              LDR      r2,|L2.632|
00009c  f8421020          STR      r1,[r2,r0,LSL #2]
0000a0  1c40              ADDS     r0,r0,#1              ;171
                  |L2.162|
0000a2  2806              CMP      r0,#6                 ;171
0000a4  dbf2              BLT      |L2.140|
                  |L2.166|
;;;174                    }
;;;175                }									
;;;176                if(reset==600)
0000a6  4871              LDR      r0,|L2.620|
0000a8  8800              LDRH     r0,[r0,#0]  ; reset
0000aa  f5b07f16          CMP      r0,#0x258
0000ae  d150              BNE      |L2.338|
;;;177                {
;;;178                    reset=0;
0000b0  2000              MOVS     r0,#0
0000b2  496e              LDR      r1,|L2.620|
0000b4  8008              STRH     r0,[r1,#0]
;;;179                    for(int i = 0; i < 6; i++) 
0000b6  bf00              NOP      
0000b8  e00b              B        |L2.210|
                  |L2.186|
;;;180                    {
;;;181                        ave[i] = add[i]/500;
0000ba  496f              LDR      r1,|L2.632|
0000bc  f8511020          LDR      r1,[r1,r0,LSL #2]
0000c0  f44f72fa          MOV      r2,#0x1f4
0000c4  fb91f1f2          SDIV     r1,r1,r2
0000c8  b209              SXTH     r1,r1
0000ca  4a6c              LDR      r2,|L2.636|
0000cc  f8221010          STRH     r1,[r2,r0,LSL #1]
0000d0  1c40              ADDS     r0,r0,#1              ;179
                  |L2.210|
0000d2  2806              CMP      r0,#6                 ;179
0000d4  dbf1              BLT      |L2.186|
;;;182                    }
;;;183                    ave[6] = ave[0]+ave[1]+ave[2]+ave[3]+ave[4]+ave[5];
0000d6  4869              LDR      r0,|L2.636|
0000d8  8800              LDRH     r0,[r0,#0]  ; ave
0000da  4968              LDR      r1,|L2.636|
0000dc  8849              LDRH     r1,[r1,#2]  ; ave
0000de  4408              ADD      r0,r0,r1
0000e0  4966              LDR      r1,|L2.636|
0000e2  8889              LDRH     r1,[r1,#4]  ; ave
0000e4  4408              ADD      r0,r0,r1
0000e6  4965              LDR      r1,|L2.636|
0000e8  88c9              LDRH     r1,[r1,#6]  ; ave
0000ea  4408              ADD      r0,r0,r1
0000ec  4963              LDR      r1,|L2.636|
0000ee  8909              LDRH     r1,[r1,#8]  ; ave
0000f0  4408              ADD      r0,r0,r1
0000f2  4962              LDR      r1,|L2.636|
0000f4  8949              LDRH     r1,[r1,#0xa]  ; ave
0000f6  4408              ADD      r0,r0,r1
0000f8  b200              SXTH     r0,r0
0000fa  4960              LDR      r1,|L2.636|
0000fc  8188              STRH     r0,[r1,#0xc]
;;;184    
;;;185                    bsp_StopTimer(0);
0000fe  2000              MOVS     r0,#0
000100  f7fffffe          BL       bsp_StopTimer
;;;186                    ucFifoMode = 2;
000104  2002              MOVS     r0,#2
000106  4956              LDR      r1,|L2.608|
000108  7008              STRB     r0,[r1,#0]
;;;187                    //显示时间更改
;;;188                    bsp_StartAutoTimer(1, 2);	
00010a  2102              MOVS     r1,#2
00010c  2001              MOVS     r0,#1
00010e  f7fffffe          BL       bsp_StartAutoTimer
;;;189                                    
;;;190                    f_mount(FS_USB, &fs);
000112  495b              LDR      r1,|L2.640|
000114  2000              MOVS     r0,#0
000116  f7fffffe          BL       f_mount
;;;191                    f_opendir(&DirInf, "/");
00011a  a15a              ADR      r1,|L2.644|
00011c  485a              LDR      r0,|L2.648|
00011e  e000              B        |L2.290|
                  |L2.288|
000120  e017              B        |L2.338|
                  |L2.290|
000122  f7fffffe          BL       f_opendir
;;;192                    f_open(&file, "采集数据.csv", FA_OPEN_ALWAYS | FA_WRITE);
000126  2212              MOVS     r2,#0x12
000128  a158              ADR      r1,|L2.652|
00012a  484e              LDR      r0,|L2.612|
00012c  f7fffffe          BL       f_open
;;;193                    f_lseek(&file,f_size(&file));
000130  484c              LDR      r0,|L2.612|
000132  68c1              LDR      r1,[r0,#0xc]  ; file
000134  f7fffffe          BL       f_lseek
;;;194                    f_write(&file,  buffer, sizeof(buffer), &bw);
000138  4b58              LDR      r3,|L2.668|
00013a  2230              MOVS     r2,#0x30
00013c  4958              LDR      r1,|L2.672|
00013e  4849              LDR      r0,|L2.612|
000140  f7fffffe          BL       f_write
;;;195                    f_sync(&file);                
000144  4847              LDR      r0,|L2.612|
000146  f7fffffe          BL       f_sync
;;;196                    //设置采集频率
;;;197                    AD7606_StartRecord(2000);
00014a  f44f60fa          MOV      r0,#0x7d0
00014e  f7fffffe          BL       AD7606_StartRecord
                  |L2.338|
;;;198                }
;;;199            }
;;;200    
;;;201    	}
;;;202    	if (ucFifoMode == 2)	/* AD7606 普通工作模式 */
000152  4843              LDR      r0,|L2.608|
000154  7800              LDRB     r0,[r0,#0]  ; ucFifoMode
000156  2802              CMP      r0,#2
000158  d17e              BNE      |L2.600|
;;;203    	{		
;;;204    		if (bsp_CheckTimer(1))
00015a  2001              MOVS     r0,#1
00015c  f7fffffe          BL       bsp_CheckTimer
000160  b110              CBZ      r0,|L2.360|
;;;205            {
;;;206                ucRefresh = 2;	/* 刷新显示 */
000162  2002              MOVS     r0,#2
000164  4940              LDR      r1,|L2.616|
000166  7008              STRB     r0,[r1,#0]
                  |L2.360|
;;;207            }
;;;208    		if (ucRefresh == 2)
000168  483f              LDR      r0,|L2.616|
00016a  7800              LDRB     r0,[r0,#0]  ; ucRefresh
00016c  2802              CMP      r0,#2
00016e  d176              BNE      |L2.606|
;;;209            {	
;;;210                ucRefresh = 0;
000170  2000              MOVS     r0,#0
000172  493d              LDR      r1,|L2.616|
000174  7008              STRB     r0,[r1,#0]
;;;211                //计算幅值和编码器距离
;;;212                for (int i = 0; i < 6; i++) 
000176  bf00              NOP      
000178  e014              B        |L2.420|
                  |L2.378|
;;;213                {
;;;214                    chan[i] = g_tAD7606.sNowAdc[i]*5000/32768+200-ave[i];
00017a  4a3d              LDR      r2,|L2.624|
00017c  f8322010          LDRH     r2,[r2,r0,LSL #1]
000180  f2413388          MOV      r3,#0x1388
000184  fb12f103          SMULBB   r1,r2,r3
000188  17ca              ASRS     r2,r1,#31
00018a  eb014252          ADD      r2,r1,r2,LSR #17
00018e  13d2              ASRS     r2,r2,#15
000190  32c8              ADDS     r2,r2,#0xc8
000192  4b3a              LDR      r3,|L2.636|
000194  f8333010          LDRH     r3,[r3,r0,LSL #1]
000198  1ad2              SUBS     r2,r2,r3
00019a  b212              SXTH     r2,r2
00019c  4b35              LDR      r3,|L2.628|
00019e  f8232010          STRH     r2,[r3,r0,LSL #1]
0001a2  1c40              ADDS     r0,r0,#1              ;212
                  |L2.420|
0001a4  2806              CMP      r0,#6                 ;212
0001a6  dbe8              BLT      |L2.378|
;;;215                }
;;;216                sum = chan[0]+chan[1]+chan[2]+chan[3]+chan[4]+chan[5]-600;
0001a8  4832              LDR      r0,|L2.628|
0001aa  8800              LDRH     r0,[r0,#0]  ; chan
0001ac  4931              LDR      r1,|L2.628|
0001ae  8849              LDRH     r1,[r1,#2]  ; chan
0001b0  4408              ADD      r0,r0,r1
0001b2  4930              LDR      r1,|L2.628|
0001b4  8889              LDRH     r1,[r1,#4]  ; chan
0001b6  4408              ADD      r0,r0,r1
0001b8  492e              LDR      r1,|L2.628|
0001ba  88c9              LDRH     r1,[r1,#6]  ; chan
0001bc  4408              ADD      r0,r0,r1
0001be  492d              LDR      r1,|L2.628|
0001c0  8909              LDRH     r1,[r1,#8]  ; chan
0001c2  4408              ADD      r0,r0,r1
0001c4  492b              LDR      r1,|L2.628|
0001c6  8949              LDRH     r1,[r1,#0xa]  ; chan
0001c8  4408              ADD      r0,r0,r1
0001ca  f5a07016          SUB      r0,r0,#0x258
0001ce  b200              SXTH     r0,r0
0001d0  4934              LDR      r1,|L2.676|
0001d2  8008              STRH     r0,[r1,#0]
;;;217                //发送曲线
;;;218                comSendChar(COM1, 0x5A);
0001d4  215a              MOVS     r1,#0x5a
0001d6  2000              MOVS     r0,#0
0001d8  f7fffffe          BL       comSendChar
;;;219                comSendChar(COM1, 0xA5);
0001dc  21a5              MOVS     r1,#0xa5
0001de  2000              MOVS     r0,#0
0001e0  f7fffffe          BL       comSendChar
;;;220                comSendChar(COM1, 0x10);
0001e4  2110              MOVS     r1,#0x10
0001e6  2000              MOVS     r0,#0
0001e8  f7fffffe          BL       comSendChar
;;;221                comSendChar(COM1, 0x84);
0001ec  2184              MOVS     r1,#0x84
0001ee  2000              MOVS     r0,#0
0001f0  f7fffffe          BL       comSendChar
;;;222                comSendChar(COM1, 0x7F);
0001f4  217f              MOVS     r1,#0x7f
0001f6  2000              MOVS     r0,#0
0001f8  f7fffffe          BL       comSendChar
;;;223                comSendHalfword(COM1,sum);
0001fc  4829              LDR      r0,|L2.676|
0001fe  8800              LDRH     r0,[r0,#0]  ; sum
000200  b281              UXTH     r1,r0
000202  2000              MOVS     r0,#0
000204  f7fffffe          BL       comSendHalfword
;;;224                for (int i = 0; i < 6; i++)
000208  2400              MOVS     r4,#0
00020a  e007              B        |L2.540|
                  |L2.524|
;;;225                {
;;;226                    comSendHalfword(COM1,chan[i]);
00020c  4819              LDR      r0,|L2.628|
00020e  f8300014          LDRH     r0,[r0,r4,LSL #1]
000212  b281              UXTH     r1,r0
000214  2000              MOVS     r0,#0
000216  f7fffffe          BL       comSendHalfword
00021a  1c64              ADDS     r4,r4,#1              ;224
                  |L2.540|
00021c  2c06              CMP      r4,#6                 ;224
00021e  dbf5              BLT      |L2.524|
;;;227                }	
;;;228                //发送位置
;;;229                comSendChar(COM1, 0x5A);
000220  215a              MOVS     r1,#0x5a
000222  2000              MOVS     r0,#0
000224  f7fffffe          BL       comSendChar
;;;230                comSendChar(COM1, 0xA5);
000228  21a5              MOVS     r1,#0xa5
00022a  2000              MOVS     r0,#0
00022c  f7fffffe          BL       comSendChar
;;;231                comSendChar(COM1, 0x07);
000230  2107              MOVS     r1,#7
000232  2000              MOVS     r0,#0
000234  f7fffffe          BL       comSendChar
;;;232                comSendChar(COM1, 0x82);
000238  2182              MOVS     r1,#0x82
00023a  2000              MOVS     r0,#0
00023c  f7fffffe          BL       comSendChar
;;;233                comSendChar(COM1, 0x00);
000240  2100              MOVS     r1,#0
000242  4608              MOV      r0,r1
000244  f7fffffe          BL       comSendChar
;;;234                comSendChar(COM1, 0x00);
000248  2100              MOVS     r1,#0
00024a  4608              MOV      r0,r1
00024c  f7fffffe          BL       comSendChar
;;;235                comSendword(COM1,len);
000250  4815              LDR      r0,|L2.680|
000252  6801              LDR      r1,[r0,#0]  ; len
000254  2000              MOVS     r0,#0
000256  e000              B        |L2.602|
                  |L2.600|
000258  e001              B        |L2.606|
                  |L2.602|
00025a  f7fffffe          BL       comSendword
                  |L2.606|
;;;236            }					
;;;237    	}
;;;238    }    
00025e  bd10              POP      {r4,pc}
;;;239    
                          ENDP

                  |L2.608|
                          DCD      ucFifoMode
                  |L2.612|
                          DCD      file
                  |L2.616|
                          DCD      ucRefresh
                  |L2.620|
                          DCD      reset
                  |L2.624|
                          DCD      g_tAD7606+0x2
                  |L2.628|
                          DCD      chan
                  |L2.632|
                          DCD      add
                  |L2.636|
                          DCD      ave
                  |L2.640|
                          DCD      ||fs||
                  |L2.644|
000284  2f00              DCB      "/",0
000286  00                DCB      0
000287  00                DCB      0
                  |L2.648|
                          DCD      DirInf
                  |L2.652|
00028c  b2c9bcaf          DCB      178,201,188,175,202,253,190,221,".csv",0
000290  cafdbedd
000294  2e637376
000298  00      
000299  00                DCB      0
00029a  00                DCB      0
00029b  00                DCB      0
                  |L2.668|
                          DCD      ||bw||
                  |L2.672|
                          DCD      buffer
                  |L2.676|
                          DCD      ||sum||
                  |L2.680|
                          DCD      len

                          AREA ||i.SaveDate||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  SaveDate PROC
;;;239    
;;;240    void SaveDate(void)
000000  b570              PUSH     {r4-r6,lr}
;;;241    {
000002  ed2d8b08          VPUSH    {d8-d11}
;;;242        //写字符型
;;;243        if(biaozhi == 1)
000006  48c9              LDR      r0,|L3.812|
000008  7800              LDRB     r0,[r0,#0]  ; biaozhi
00000a  2801              CMP      r0,#1
00000c  d17e              BNE      |L3.268|
;;;244        {
;;;245            for (int i = 0; i < 6; i++)
00000e  2000              MOVS     r0,#0
000010  e00e              B        |L3.48|
                  |L3.18|
;;;246            {
;;;247                channel[i] = g_tAD7606.sNowAdc[i]*5000/32768;
000012  4ac7              LDR      r2,|L3.816|
000014  f8322010          LDRH     r2,[r2,r0,LSL #1]
000018  f2413388          MOV      r3,#0x1388
00001c  fb12f103          SMULBB   r1,r2,r3
000020  17ca              ASRS     r2,r1,#31
000022  eb014252          ADD      r2,r1,r2,LSR #17
000026  13d2              ASRS     r2,r2,#15
000028  4bc2              LDR      r3,|L3.820|
00002a  f8232010          STRH     r2,[r3,r0,LSL #1]
00002e  1c40              ADDS     r0,r0,#1              ;245
                  |L3.48|
000030  2806              CMP      r0,#6                 ;245
000032  dbee              BLT      |L3.18|
;;;248            }
;;;249            sumchannel = channel[0]+channel[1]+channel[2]+channel[3]+channel[4]+channel[5];
000034  48bf              LDR      r0,|L3.820|
000036  8800              LDRH     r0,[r0,#0]  ; channel
000038  49be              LDR      r1,|L3.820|
00003a  8849              LDRH     r1,[r1,#2]  ; channel
00003c  4408              ADD      r0,r0,r1
00003e  49bd              LDR      r1,|L3.820|
000040  8889              LDRH     r1,[r1,#4]  ; channel
000042  4408              ADD      r0,r0,r1
000044  49bb              LDR      r1,|L3.820|
000046  88c9              LDRH     r1,[r1,#6]  ; channel
000048  4408              ADD      r0,r0,r1
00004a  49ba              LDR      r1,|L3.820|
00004c  8909              LDRH     r1,[r1,#8]  ; channel
00004e  4408              ADD      r0,r0,r1
000050  49b8              LDR      r1,|L3.820|
000052  8949              LDRH     r1,[r1,#0xa]  ; channel
000054  4408              ADD      r0,r0,r1
000056  b200              SXTH     r0,r0
000058  49b7              LDR      r1,|L3.824|
00005a  8008              STRH     r0,[r1,#0]
;;;250            num=(circle_count-1)*2400+TIM_GetCounter(TIM4);
00005c  48b7              LDR      r0,|L3.828|
00005e  f7fffffe          BL       TIM_GetCounter
000062  49b7              LDR      r1,|L3.832|
000064  6809              LDR      r1,[r1,#0]  ; circle_count
000066  1e49              SUBS     r1,r1,#1
000068  ebc11101          RSB      r1,r1,r1,LSL #4
00006c  eb010181          ADD      r1,r1,r1,LSL #2
000070  eb001041          ADD      r0,r0,r1,LSL #5
000074  49b3              LDR      r1,|L3.836|
000076  6008              STR      r0,[r1,#0]  ; num
;;;251            len = num*80*3.14/4/600;
000078  6809              LDR      r1,[r1,#0]  ; num
00007a  eb010181          ADD      r1,r1,r1,LSL #2
00007e  0108              LSLS     r0,r1,#4
000080  f7fffffe          BL       __aeabi_i2d
000084  ed9f0bb0          VLDR     d0,|L3.840|
000088  ec532b10          VMOV     r2,r3,d0
00008c  f7fffffe          BL       __aeabi_dmul
000090  ed9f0baf          VLDR     d0,|L3.848|
000094  ec532b10          VMOV     r2,r3,d0
000098  f7fffffe          BL       __aeabi_ddiv
00009c  ed9f0bae          VLDR     d0,|L3.856|
0000a0  ec532b10          VMOV     r2,r3,d0
0000a4  f7fffffe          BL       __aeabi_ddiv
0000a8  f7fffffe          BL       __aeabi_d2iz
0000ac  49ac              LDR      r1,|L3.864|
0000ae  6008              STR      r0,[r1,#0]  ; len
;;;252    
;;;253            sprintf(bufferSaveLen, " %d" , len);
0000b0  4608              MOV      r0,r1
0000b2  a1ac              ADR      r1,|L3.868|
0000b4  6802              LDR      r2,[r0,#0]  ; len
0000b6  48ac              LDR      r0,|L3.872|
0000b8  f7fffffe          BL       __2sprintf
;;;254            for(int i = 0; i < 6; i++)
0000bc  2400              MOVS     r4,#0
0000be  e00a              B        |L3.214|
                  |L3.192|
;;;255            {
;;;256               sprintf(bufferSaveChannel[i], " %d" , channel[i]); 
0000c0  499c              LDR      r1,|L3.820|
0000c2  f9312014          LDRSH    r2,[r1,r4,LSL #1]
0000c6  eb040184          ADD      r1,r4,r4,LSL #2
0000ca  4ba8              LDR      r3,|L3.876|
0000cc  18c8              ADDS     r0,r1,r3
0000ce  a1a5              ADR      r1,|L3.868|
0000d0  f7fffffe          BL       __2sprintf
0000d4  1c64              ADDS     r4,r4,#1              ;254
                  |L3.214|
0000d6  2c06              CMP      r4,#6                 ;254
0000d8  dbf2              BLT      |L3.192|
;;;257            }
;;;258            sprintf(bufferSaveSum, " %d" , sumchannel);
0000da  4897              LDR      r0,|L3.824|
0000dc  f9b02000          LDRSH    r2,[r0,#0]  ; sumchannel
0000e0  a1a0              ADR      r1,|L3.868|
0000e2  48a3              LDR      r0,|L3.880|
0000e4  f7fffffe          BL       __2sprintf
;;;259           
;;;260            if(Mark==end)
0000e8  48a2              LDR      r0,|L3.884|
0000ea  8800              LDRH     r0,[r0,#0]  ; Mark
0000ec  49a2              LDR      r1,|L3.888|
0000ee  f9b11000          LDRSH    r1,[r1,#0]  ; end
0000f2  4288              CMP      r0,r1
0000f4  d102              BNE      |L3.252|
;;;261            {
;;;262                Mark=0;
0000f6  2000              MOVS     r0,#0
0000f8  499e              LDR      r1,|L3.884|
0000fa  8008              STRH     r0,[r1,#0]
                  |L3.252|
;;;263                
;;;264            }
;;;265            //一次54-6=48个字符
;;;266            if(Mark<middle)
0000fc  489d              LDR      r0,|L3.884|
0000fe  8800              LDRH     r0,[r0,#0]  ; Mark
000100  499e              LDR      r1,|L3.892|
000102  f9b11000          LDRSH    r1,[r1,#0]  ; middle
000106  4288              CMP      r0,r1
000108  da57              BGE      |L3.442|
;;;267            {           
;;;268                for(int i = 0; i <10; i++)
00010a  e000              B        |L3.270|
                  |L3.268|
00010c  e0d5              B        |L3.698|
                  |L3.270|
00010e  2000              MOVS     r0,#0
000110  e00b              B        |L3.298|
                  |L3.274|
;;;269                {
;;;270                    g_tAdcFifo.sBuf1[g_tAdcFifo.usWrite1++] = bufferSaveLen[i];
000112  4995              LDR      r1,|L3.872|
000114  5c0a              LDRB     r2,[r1,r0]
000116  499a              LDR      r1,|L3.896|
000118  884b              LDRH     r3,[r1,#2]  ; g_tAdcFifo
00011a  8849              LDRH     r1,[r1,#2]  ; g_tAdcFifo
00011c  1c49              ADDS     r1,r1,#1
00011e  4c98              LDR      r4,|L3.896|
000120  8061              STRH     r1,[r4,#2]
000122  f1040109          ADD      r1,r4,#9
000126  54ca              STRB     r2,[r1,r3]
000128  1c40              ADDS     r0,r0,#1              ;268
                  |L3.298|
00012a  280a              CMP      r0,#0xa               ;268
00012c  dbf1              BLT      |L3.274|
;;;271                    
;;;272                }
;;;273                g_tAdcFifo.sBuf1[g_tAdcFifo.usWrite1++] = ',';
00012e  212c              MOVS     r1,#0x2c
000130  4893              LDR      r0,|L3.896|
000132  8842              LDRH     r2,[r0,#2]  ; g_tAdcFifo
000134  8840              LDRH     r0,[r0,#2]  ; g_tAdcFifo
000136  1c40              ADDS     r0,r0,#1
000138  4b91              LDR      r3,|L3.896|
00013a  8058              STRH     r0,[r3,#2]
00013c  f1030009          ADD      r0,r3,#9
000140  5481              STRB     r1,[r0,r2]
;;;274                for(int j = 0; j < 6; j++) 
000142  2000              MOVS     r0,#0
000144  e01d              B        |L3.386|
                  |L3.326|
;;;275                {
;;;276                    for(int i = 1; i < 5; i++)
000146  2101              MOVS     r1,#1
000148  e00e              B        |L3.360|
                  |L3.330|
;;;277                    {
;;;278                        g_tAdcFifo.sBuf1[g_tAdcFifo.usWrite1++] = bufferSaveChannel[j][i];
00014a  eb000280          ADD      r2,r0,r0,LSL #2
00014e  4b87              LDR      r3,|L3.876|
000150  441a              ADD      r2,r2,r3
000152  5c53              LDRB     r3,[r2,r1]
000154  4a8a              LDR      r2,|L3.896|
000156  8854              LDRH     r4,[r2,#2]  ; g_tAdcFifo
000158  8852              LDRH     r2,[r2,#2]  ; g_tAdcFifo
00015a  1c52              ADDS     r2,r2,#1
00015c  4d88              LDR      r5,|L3.896|
00015e  806a              STRH     r2,[r5,#2]
000160  f1050209          ADD      r2,r5,#9
000164  5513              STRB     r3,[r2,r4]
000166  1c49              ADDS     r1,r1,#1              ;276
                  |L3.360|
000168  2905              CMP      r1,#5                 ;276
00016a  dbee              BLT      |L3.330|
;;;279                    }
;;;280                    g_tAdcFifo.sBuf1[g_tAdcFifo.usWrite1++] = ',';
00016c  222c              MOVS     r2,#0x2c
00016e  4984              LDR      r1,|L3.896|
000170  884b              LDRH     r3,[r1,#2]  ; g_tAdcFifo
000172  8849              LDRH     r1,[r1,#2]  ; g_tAdcFifo
000174  1c49              ADDS     r1,r1,#1
000176  4c82              LDR      r4,|L3.896|
000178  8061              STRH     r1,[r4,#2]
00017a  f1040109          ADD      r1,r4,#9
00017e  54ca              STRB     r2,[r1,r3]
000180  1c40              ADDS     r0,r0,#1              ;274
                  |L3.386|
000182  2806              CMP      r0,#6                 ;274
000184  dbdf              BLT      |L3.326|
;;;281                }
;;;282                for(int i = 1; i < 6; i++)
000186  2001              MOVS     r0,#1
000188  e00b              B        |L3.418|
                  |L3.394|
;;;283                {
;;;284                    g_tAdcFifo.sBuf1[g_tAdcFifo.usWrite1++] = bufferSaveSum[i];
00018a  4979              LDR      r1,|L3.880|
00018c  5c0a              LDRB     r2,[r1,r0]
00018e  497c              LDR      r1,|L3.896|
000190  884b              LDRH     r3,[r1,#2]  ; g_tAdcFifo
000192  8849              LDRH     r1,[r1,#2]  ; g_tAdcFifo
000194  1c49              ADDS     r1,r1,#1
000196  4c7a              LDR      r4,|L3.896|
000198  8061              STRH     r1,[r4,#2]
00019a  f1040109          ADD      r1,r4,#9
00019e  54ca              STRB     r2,[r1,r3]
0001a0  1c40              ADDS     r0,r0,#1              ;282
                  |L3.418|
0001a2  2806              CMP      r0,#6                 ;282
0001a4  dbf1              BLT      |L3.394|
;;;285                }               
;;;286                g_tAdcFifo.sBuf1[g_tAdcFifo.usWrite1++] = '\n';
0001a6  210a              MOVS     r1,#0xa
0001a8  4875              LDR      r0,|L3.896|
0001aa  8842              LDRH     r2,[r0,#2]  ; g_tAdcFifo
0001ac  8840              LDRH     r0,[r0,#2]  ; g_tAdcFifo
0001ae  1c40              ADDS     r0,r0,#1
0001b0  4b73              LDR      r3,|L3.896|
0001b2  8058              STRH     r0,[r3,#2]
0001b4  f1030009          ADD      r0,r3,#9
0001b8  5481              STRB     r1,[r0,r2]
                  |L3.442|
;;;287            }
;;;288            if(Mark >= middle && Mark < end)
0001ba  486e              LDR      r0,|L3.884|
0001bc  8800              LDRH     r0,[r0,#0]  ; Mark
0001be  496f              LDR      r1,|L3.892|
0001c0  f9b11000          LDRSH    r1,[r1,#0]  ; middle
0001c4  4288              CMP      r0,r1
0001c6  db56              BLT      |L3.630|
0001c8  486a              LDR      r0,|L3.884|
0001ca  8800              LDRH     r0,[r0,#0]  ; Mark
0001cc  496a              LDR      r1,|L3.888|
0001ce  f9b11000          LDRSH    r1,[r1,#0]  ; end
0001d2  4288              CMP      r0,r1
0001d4  da4f              BGE      |L3.630|
;;;289            {
;;;290                for(int i = 0; i <10; i++)
0001d6  2000              MOVS     r0,#0
0001d8  e00a              B        |L3.496|
                  |L3.474|
;;;291                {
;;;292                    g_tAdcFifo.sBuf2[g_tAdcFifo.usWrite2++] = bufferSaveLen[i];
0001da  4963              LDR      r1,|L3.872|
0001dc  5c0a              LDRB     r2,[r1,r0]
0001de  4968              LDR      r1,|L3.896|
0001e0  888b              LDRH     r3,[r1,#4]  ; g_tAdcFifo
0001e2  8889              LDRH     r1,[r1,#4]  ; g_tAdcFifo
0001e4  1c49              ADDS     r1,r1,#1
0001e6  4c66              LDR      r4,|L3.896|
0001e8  80a1              STRH     r1,[r4,#4]
0001ea  4966              LDR      r1,|L3.900|
0001ec  54ca              STRB     r2,[r1,r3]
0001ee  1c40              ADDS     r0,r0,#1              ;290
                  |L3.496|
0001f0  280a              CMP      r0,#0xa               ;290
0001f2  dbf2              BLT      |L3.474|
;;;293                    
;;;294                }
;;;295                g_tAdcFifo.sBuf2[g_tAdcFifo.usWrite2++] = ',';
0001f4  212c              MOVS     r1,#0x2c
0001f6  4862              LDR      r0,|L3.896|
0001f8  8882              LDRH     r2,[r0,#4]  ; g_tAdcFifo
0001fa  8880              LDRH     r0,[r0,#4]  ; g_tAdcFifo
0001fc  1c40              ADDS     r0,r0,#1
0001fe  4b60              LDR      r3,|L3.896|
000200  8098              STRH     r0,[r3,#4]
000202  4860              LDR      r0,|L3.900|
000204  5481              STRB     r1,[r0,r2]
;;;296                for(int j = 0; j < 6; j++) 
000206  2000              MOVS     r0,#0
000208  e01b              B        |L3.578|
                  |L3.522|
;;;297                {
;;;298                    for(int i = 1; i < 5; i++)
00020a  2101              MOVS     r1,#1
00020c  e00d              B        |L3.554|
                  |L3.526|
;;;299                    {
;;;300                        g_tAdcFifo.sBuf2[g_tAdcFifo.usWrite2++] = bufferSaveChannel[j][i];
00020e  eb000280          ADD      r2,r0,r0,LSL #2
000212  4b56              LDR      r3,|L3.876|
000214  441a              ADD      r2,r2,r3
000216  5c53              LDRB     r3,[r2,r1]
000218  4a59              LDR      r2,|L3.896|
00021a  8894              LDRH     r4,[r2,#4]  ; g_tAdcFifo
00021c  8892              LDRH     r2,[r2,#4]  ; g_tAdcFifo
00021e  1c52              ADDS     r2,r2,#1
000220  4d57              LDR      r5,|L3.896|
000222  80aa              STRH     r2,[r5,#4]
000224  4a57              LDR      r2,|L3.900|
000226  5513              STRB     r3,[r2,r4]
000228  1c49              ADDS     r1,r1,#1              ;298
                  |L3.554|
00022a  2905              CMP      r1,#5                 ;298
00022c  dbef              BLT      |L3.526|
;;;301                    }
;;;302                    g_tAdcFifo.sBuf2[g_tAdcFifo.usWrite2++] = ',';
00022e  222c              MOVS     r2,#0x2c
000230  4953              LDR      r1,|L3.896|
000232  888b              LDRH     r3,[r1,#4]  ; g_tAdcFifo
000234  8889              LDRH     r1,[r1,#4]  ; g_tAdcFifo
000236  1c49              ADDS     r1,r1,#1
000238  4c51              LDR      r4,|L3.896|
00023a  80a1              STRH     r1,[r4,#4]
00023c  4951              LDR      r1,|L3.900|
00023e  54ca              STRB     r2,[r1,r3]
000240  1c40              ADDS     r0,r0,#1              ;296
                  |L3.578|
000242  2806              CMP      r0,#6                 ;296
000244  dbe1              BLT      |L3.522|
;;;303                }
;;;304                for(int i = 1; i < 6; i++)
000246  2001              MOVS     r0,#1
000248  e00a              B        |L3.608|
                  |L3.586|
;;;305                {
;;;306                    g_tAdcFifo.sBuf2[g_tAdcFifo.usWrite2++] = bufferSaveSum[i];
00024a  4949              LDR      r1,|L3.880|
00024c  5c0a              LDRB     r2,[r1,r0]
00024e  494c              LDR      r1,|L3.896|
000250  888b              LDRH     r3,[r1,#4]  ; g_tAdcFifo
000252  8889              LDRH     r1,[r1,#4]  ; g_tAdcFifo
000254  1c49              ADDS     r1,r1,#1
000256  4c4a              LDR      r4,|L3.896|
000258  80a1              STRH     r1,[r4,#4]
00025a  494a              LDR      r1,|L3.900|
00025c  54ca              STRB     r2,[r1,r3]
00025e  1c40              ADDS     r0,r0,#1              ;304
                  |L3.608|
000260  2806              CMP      r0,#6                 ;304
000262  dbf2              BLT      |L3.586|
;;;307                }               
;;;308                g_tAdcFifo.sBuf2[g_tAdcFifo.usWrite2++] = '\n';
000264  210a              MOVS     r1,#0xa
000266  4846              LDR      r0,|L3.896|
000268  8882              LDRH     r2,[r0,#4]  ; g_tAdcFifo
00026a  8880              LDRH     r0,[r0,#4]  ; g_tAdcFifo
00026c  1c40              ADDS     r0,r0,#1
00026e  4b44              LDR      r3,|L3.896|
000270  8098              STRH     r0,[r3,#4]
000272  4844              LDR      r0,|L3.900|
000274  5481              STRB     r1,[r0,r2]
                  |L3.630|
;;;309            }
;;;310    
;;;311            Mark++;
000276  483f              LDR      r0,|L3.884|
000278  8800              LDRH     r0,[r0,#0]  ; Mark
00027a  1c40              ADDS     r0,r0,#1
00027c  493d              LDR      r1,|L3.884|
00027e  8008              STRH     r0,[r1,#0]
;;;312            
;;;313            if(Mark == middle)
000280  4608              MOV      r0,r1
000282  8800              LDRH     r0,[r0,#0]  ; Mark
000284  493d              LDR      r1,|L3.892|
000286  f9b11000          LDRSH    r1,[r1,#0]  ; middle
00028a  4288              CMP      r0,r1
00028c  d105              BNE      |L3.666|
;;;314            {
;;;315    
;;;316                Calibration = 1;
00028e  2001              MOVS     r0,#1
000290  493d              LDR      r1,|L3.904|
000292  7008              STRB     r0,[r1,#0]
;;;317                g_tAdcFifo.usWrite1 = 0;
000294  2000              MOVS     r0,#0
000296  493a              LDR      r1,|L3.896|
000298  8048              STRH     r0,[r1,#2]
                  |L3.666|
;;;318            
;;;319            }
;;;320            if(Mark == end)
00029a  4836              LDR      r0,|L3.884|
00029c  8800              LDRH     r0,[r0,#0]  ; Mark
00029e  4936              LDR      r1,|L3.888|
0002a0  f9b11000          LDRSH    r1,[r1,#0]  ; end
0002a4  4288              CMP      r0,r1
0002a6  d105              BNE      |L3.692|
;;;321            {
;;;322    
;;;323                Calibration = 2;
0002a8  2002              MOVS     r0,#2
0002aa  4937              LDR      r1,|L3.904|
0002ac  7008              STRB     r0,[r1,#0]
;;;324                g_tAdcFifo.usWrite2 = 0;
0002ae  2000              MOVS     r0,#0
0002b0  4933              LDR      r1,|L3.896|
0002b2  8088              STRH     r0,[r1,#4]
                  |L3.692|
;;;325                
;;;326            }
;;;327               
;;;328            biaozhi = 0;
0002b4  2000              MOVS     r0,#0
0002b6  491d              LDR      r1,|L3.812|
0002b8  7008              STRB     r0,[r1,#0]
                  |L3.698|
;;;329    
;;;330        }
;;;331    	
;;;332        if(Calibration == 1)
0002ba  4833              LDR      r0,|L3.904|
0002bc  7800              LDRB     r0,[r0,#0]  ; Calibration
0002be  2801              CMP      r0,#1
0002c0  d117              BNE      |L3.754|
;;;333        {
;;;334            f_lseek(&file,f_size(&file));
0002c2  4832              LDR      r0,|L3.908|
0002c4  68c1              LDR      r1,[r0,#0xc]  ; file
0002c6  f7fffffe          BL       f_lseek
;;;335            f_write(&file, g_tAdcFifo.sBuf1, sizeof(g_tAdcFifo.sBuf1), &bw);
0002ca  4b31              LDR      r3,|L3.912|
0002cc  f44f5200          MOV      r2,#0x2000
0002d0  492b              LDR      r1,|L3.896|
0002d2  3109              ADDS     r1,r1,#9
0002d4  482d              LDR      r0,|L3.908|
0002d6  f7fffffe          BL       f_write
;;;336            f_sync(&file);
0002da  482c              LDR      r0,|L3.908|
0002dc  f7fffffe          BL       f_sync
;;;337            memset(g_tAdcFifo.sBuf1,0,sizeof(g_tAdcFifo.sBuf1));
0002e0  f44f5100          MOV      r1,#0x2000
0002e4  4826              LDR      r0,|L3.896|
0002e6  3009              ADDS     r0,r0,#9
0002e8  f7fffffe          BL       __aeabi_memclr
;;;338            Calibration = 0;
0002ec  2000              MOVS     r0,#0
0002ee  4926              LDR      r1,|L3.904|
0002f0  7008              STRB     r0,[r1,#0]
                  |L3.754|
;;;339        }
;;;340        if(Calibration == 2)
0002f2  4825              LDR      r0,|L3.904|
0002f4  7800              LDRB     r0,[r0,#0]  ; Calibration
0002f6  2802              CMP      r0,#2
0002f8  d115              BNE      |L3.806|
;;;341        {
;;;342            f_lseek(&file,f_size(&file));
0002fa  4824              LDR      r0,|L3.908|
0002fc  68c1              LDR      r1,[r0,#0xc]  ; file
0002fe  f7fffffe          BL       f_lseek
;;;343            f_write(&file, g_tAdcFifo.sBuf2, sizeof(g_tAdcFifo.sBuf2), &bw);
000302  4b23              LDR      r3,|L3.912|
000304  f44f5200          MOV      r2,#0x2000
000308  491e              LDR      r1,|L3.900|
00030a  4820              LDR      r0,|L3.908|
00030c  f7fffffe          BL       f_write
;;;344            f_sync(&file);
000310  481e              LDR      r0,|L3.908|
000312  f7fffffe          BL       f_sync
;;;345            memset(g_tAdcFifo.sBuf2,0,sizeof(g_tAdcFifo.sBuf2));
000316  f44f5100          MOV      r1,#0x2000
00031a  481a              LDR      r0,|L3.900|
00031c  f7fffffe          BL       __aeabi_memclr
;;;346            Calibration = 0;
000320  2000              MOVS     r0,#0
000322  4919              LDR      r1,|L3.904|
000324  7008              STRB     r0,[r1,#0]
                  |L3.806|
;;;347        }
;;;348    }
000326  ecbd8b08          VPOP     {d8-d11}
00032a  bd70              POP      {r4-r6,pc}
;;;349    
                          ENDP

                  |L3.812|
                          DCD      biaozhi
                  |L3.816|
                          DCD      g_tAD7606+0x2
                  |L3.820|
                          DCD      channel
                  |L3.824|
                          DCD      sumchannel
                  |L3.828|
                          DCD      0x40000800
                  |L3.832|
                          DCD      circle_count
                  |L3.836|
                          DCD      num
                  |L3.840|
000348  51eb851f          DCFD     0x40091eb851eb851f ; 3.1400000000000001
00034c  40091eb8
                  |L3.848|
000350  00000000          DCFD     0x4010000000000000 ; 4
000354  40100000
                  |L3.856|
000358  00000000          DCFD     0x4082c00000000000 ; 600
00035c  4082c000
                  |L3.864|
                          DCD      len
                  |L3.868|
000364  20256400          DCB      " %d",0
                  |L3.872|
                          DCD      bufferSaveLen
                  |L3.876|
                          DCD      bufferSaveChannel
                  |L3.880|
                          DCD      bufferSaveSum
                  |L3.884|
                          DCD      Mark
                  |L3.888|
                          DCD      end
                  |L3.892|
                          DCD      middle
                  |L3.896|
                          DCD      g_tAdcFifo
                  |L3.900|
                          DCD      g_tAdcFifo+0x2009
                  |L3.904|
                          DCD      Calibration
                  |L3.908|
                          DCD      file
                  |L3.912|
                          DCD      ||bw||

                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=1

                  delay_us PROC
;;;54     
;;;55     void delay_us(uint32_t delay_us)
000000  b50c              PUSH     {r2,r3,lr}
;;;56     {
;;;57       volatile unsigned int num;
;;;58       volatile unsigned int t;
;;;59     
;;;60       for (num = 0; num < delay_us; num++)
000002  2100              MOVS     r1,#0
000004  9101              STR      r1,[sp,#4]
000006  e00b              B        |L4.32|
                  |L4.8|
;;;61       {
;;;62         t = 11;
000008  210b              MOVS     r1,#0xb
00000a  9100              STR      r1,[sp,#0]
;;;63         while (t != 0)
00000c  e002              B        |L4.20|
                  |L4.14|
;;;64         {
;;;65           t--;
00000e  9900              LDR      r1,[sp,#0]
000010  1e49              SUBS     r1,r1,#1
000012  9100              STR      r1,[sp,#0]
                  |L4.20|
000014  9900              LDR      r1,[sp,#0]            ;63
000016  2900              CMP      r1,#0                 ;63
000018  d1f9              BNE      |L4.14|
00001a  9901              LDR      r1,[sp,#4]            ;60
00001c  1c49              ADDS     r1,r1,#1              ;60
00001e  9101              STR      r1,[sp,#4]            ;60
                  |L4.32|
000020  9901              LDR      r1,[sp,#4]            ;60
000022  4281              CMP      r1,r0                 ;60
000024  d3f0              BCC      |L4.8|
;;;66         }
;;;67       }
;;;68     }
000026  bd0c              POP      {r2,r3,pc}
;;;69     
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;77     */
;;;78     int main(void)
000000  b508              PUSH     {r3,lr}
;;;79     {
;;;80     	delay_us(100000);//短暂延时，确保外设供电	
000002  4815              LDR      r0,|L5.88|
000004  f7fffffe          BL       delay_us
;;;81     	bsp_Init();
000008  f7fffffe          BL       bsp_Init
;;;82     	#ifdef USE_USB_OTG_FS
;;;83     		USBH_Init(&USB_OTG_Core,
;;;84     			USB_OTG_FS_CORE_ID,
;;;85                 &USB_Host,
;;;86                 &USBH_MSC_cb,
;;;87                 &USR_cb);
;;;88     	#else
;;;89     		USBH_Init(&USB_OTG_Core,
00000c  4813              LDR      r0,|L5.92|
00000e  4b14              LDR      r3,|L5.96|
000010  4a14              LDR      r2,|L5.100|
000012  2100              MOVS     r1,#0
000014  9000              STR      r0,[sp,#0]
000016  4814              LDR      r0,|L5.104|
000018  f7fffffe          BL       USBH_Init
;;;90     			USB_OTG_HS_CORE_ID,
;;;91                 &USB_Host,
;;;92                 &USBH_MSC_cb,
;;;93                 &USR_cb);
;;;94     	#endif
;;;95     	bsp_InitAD7606();	/* 配置AD7606所用的GPIO */
00001c  f7fffffe          BL       bsp_InitAD7606
;;;96     	AD7606_SetOS(AD_OS_NO);		/* 无过采样 */
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       AD7606_SetOS
;;;97     	AD7606_SetInputRange(0);	/* 0表示输入量程为正负5V, 1表示正负10V */
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       AD7606_SetInputRange
;;;98     	AD7606_StartConvst();		/* 启动1次转换 */
00002c  f7fffffe          BL       AD7606_StartConvst
;;;99     	ucRefresh = 0;
000030  2000              MOVS     r0,#0
000032  490e              LDR      r1,|L5.108|
000034  7008              STRB     r0,[r1,#0]
;;;100    	Encoder_Init();	
000036  f7fffffe          BL       Encoder_Init
;;;101        
;;;102    	while (1)
00003a  e00b              B        |L5.84|
                  |L5.60|
;;;103    	{
;;;104    		bsp_Idle();		/* 空闲时执行的函数,比如喂狗. 在bsp.c中 */
00003c  f7fffffe          BL       bsp_Idle
;;;105            USBH_Process(&USB_OTG_Core, &USB_Host);
000040  4908              LDR      r1,|L5.100|
000042  4809              LDR      r0,|L5.104|
000044  f7fffffe          BL       USBH_Process
;;;106            DewenSet();
000048  f7fffffe          BL       DewenSet
;;;107            HandleDate();
00004c  f7fffffe          BL       HandleDate
;;;108            SaveDate();
000050  f7fffffe          BL       SaveDate
                  |L5.84|
000054  e7f2              B        |L5.60|
;;;109        }
;;;110    
;;;111    }
;;;112    
                          ENDP

000056  0000              DCW      0x0000
                  |L5.88|
                          DCD      0x000186a0
                  |L5.92|
                          DCD      USR_cb
                  |L5.96|
                          DCD      USBH_MSC_cb
                  |L5.100|
                          DCD      USB_Host
                  |L5.104|
                          DCD      USB_OTG_Core
                  |L5.108|
                          DCD      ucRefresh

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  chan
                          %        12
                  add
                          %        24
                  ave
                          %        14
                  channel
                          %        12
                  bufferSaveChannel
                          %        30
                  bufferSaveLen
                          %        12
                  ||fs||
                          %        564
                  file
                          %        552
                  DirInf
                          %        36

                          AREA ||.data||, DATA, ALIGN=2

                  count
000000  00                DCB      0x00
                  count_1
000001  000000            DCB      0x00,0x00,0x00
                  biaozhi_lb
                          DCD      0x00000000
                  biaozhi_lb_1
                          DCD      0x00000000
                  ||sum||
00000c  0000              DCB      0x00,0x00
                  sum_lb
00000e  0000              DCB      0x00,0x00
                  biaozhi_bart
                          DCD      0x00000000
                  sum_lb_bart
000014  0000              DCB      0x00,0x00
                  ucRefresh
000016  00                DCB      0x00
                  ucFifoMode
000017  00                DCB      0x00
                  reset
000018  0000              DCW      0x0000
                  buffer
00001a  cebb              DCB      0xce,0xbb
00001c  d6c32ccd          DCB      0xd6,0xc3,0x2c,0xcd
000020  a8b5c031          DCB      0xa8,0xb5,0xc0,0x31
000024  2ccda8b5          DCB      0x2c,0xcd,0xa8,0xb5
000028  c0322ccd          DCB      0xc0,0x32,0x2c,0xcd
00002c  a8b5c033          DCB      0xa8,0xb5,0xc0,0x33
000030  2ccda8b5          DCB      0x2c,0xcd,0xa8,0xb5
000034  c0342ccd          DCB      0xc0,0x34,0x2c,0xcd
000038  a8b5c035          DCB      0xa8,0xb5,0xc0,0x35
00003c  2ccda8b5          DCB      0x2c,0xcd,0xa8,0xb5
000040  c0362cba          DCB      0xc0,0x36,0x2c,0xba
000044  cdcda8b5          DCB      0xcd,0xcd,0xa8,0xb5
000048  c00a              DCB      0xc0,0x0a
                  middle
00004a  0097              DCW      0x0097
                  end
00004c  012e              DCW      0x012e
                  Mark
00004e  0000              DCW      0x0000
                  Calibration
000050  0000              DCB      0x00,0x00
                  sumchannel
000052  0000              DCB      0x00,0x00
                  num
                          DCD      0x00000000
                  len
                          DCD      0x00000000
                  bufferSaveSum
                          DCD      0x00000000
000060  00000000          DCB      0x00,0x00,0x00,0x00
                  ||bw||
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_count____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_count____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_count____REVSH|
#line 144
|__asm___6_main_c_count____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
